//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Model.POCO
{
    using System.Runtime.Serialization;
    using System;
    using System.Collections.Generic;
    
    [DataContract]
    public partial class Student : BaseEntity
    {
        public Student()
        {
            this.StudentTestDetails = new HashSet<StudentTestDetail>();
            this.StudentTests = new HashSet<StudentTest>();
            this.SubjectsClasses = new HashSet<SubjectsClass>();
        }
    
    	private long m_StudentId;
    	private string m_StudentNo;
    	private string m_FirstName;
    	private string m_LastName;
    	private System.DateTime m_BirthDay;
    	private string m_Address;
    	private string m_CMND;
    	private string m_Phone;
    	private string m_HomePhone;
    	private string m_Email;
    	private string m_UserName;
    	private string m_PassWord;
    	private int m_SchoolYear;
    	private Nullable<bool> m_IsActive;
    	private string m_Images;
        public long StudentId {
    		get{ 
    			return m_StudentId;
    		} 
    		set{ 
    			if(m_StudentId != value){
    				m_StudentId = value; 
    				NotifyPropertyChanged("StudentId"); 
                }
    		} 
    	}
    	[DataMember]
        public string StudentNo {
    		get{ 
    			return m_StudentNo;
    		} 
    		set{ 
    			if(m_StudentNo != value){
    				m_StudentNo = value; 
    				NotifyPropertyChanged("StudentNo"); 
                }
    		} 
    	}
    	[DataMember]
        public string FirstName {
    		get{ 
    			return m_FirstName;
    		} 
    		set{ 
    			if(m_FirstName != value){
    				m_FirstName = value; 
    				NotifyPropertyChanged("FirstName"); 
                }
    		} 
    	}
    	[DataMember]
        public string LastName {
    		get{ 
    			return m_LastName;
    		} 
    		set{ 
    			if(m_LastName != value){
    				m_LastName = value; 
    				NotifyPropertyChanged("LastName"); 
                }
    		} 
    	}
    	[DataMember]
        public System.DateTime BirthDay {
    		get{ 
    			return m_BirthDay;
    		} 
    		set{ 
    			if(m_BirthDay != value){
    				m_BirthDay = value; 
    				NotifyPropertyChanged("BirthDay"); 
                }
    		} 
    	}
    	[DataMember]
        public string Address {
    		get{ 
    			return m_Address;
    		} 
    		set{ 
    			if(m_Address != value){
    				m_Address = value; 
    				NotifyPropertyChanged("Address"); 
                }
    		} 
    	}
    	[DataMember]
        public string CMND {
    		get{ 
    			return m_CMND;
    		} 
    		set{ 
    			if(m_CMND != value){
    				m_CMND = value; 
    				NotifyPropertyChanged("CMND"); 
                }
    		} 
    	}
    	[DataMember]
        public string Phone {
    		get{ 
    			return m_Phone;
    		} 
    		set{ 
    			if(m_Phone != value){
    				m_Phone = value; 
    				NotifyPropertyChanged("Phone"); 
                }
    		} 
    	}
    	[DataMember]
        public string HomePhone {
    		get{ 
    			return m_HomePhone;
    		} 
    		set{ 
    			if(m_HomePhone != value){
    				m_HomePhone = value; 
    				NotifyPropertyChanged("HomePhone"); 
                }
    		} 
    	}
    	[DataMember]
        public string Email {
    		get{ 
    			return m_Email;
    		} 
    		set{ 
    			if(m_Email != value){
    				m_Email = value; 
    				NotifyPropertyChanged("Email"); 
                }
    		} 
    	}
    	[DataMember]
        public string UserName {
    		get{ 
    			return m_UserName;
    		} 
    		set{ 
    			if(m_UserName != value){
    				m_UserName = value; 
    				NotifyPropertyChanged("UserName"); 
                }
    		} 
    	}
    	[DataMember]
        public string PassWord {
    		get{ 
    			return m_PassWord;
    		} 
    		set{ 
    			if(m_PassWord != value){
    				m_PassWord = value; 
    				NotifyPropertyChanged("PassWord"); 
                }
    		} 
    	}
    	[DataMember]
        public int SchoolYear {
    		get{ 
    			return m_SchoolYear;
    		} 
    		set{ 
    			if(m_SchoolYear != value){
    				m_SchoolYear = value; 
    				NotifyPropertyChanged("SchoolYear"); 
                }
    		} 
    	}
    	[DataMember]
        public Nullable<bool> IsActive {
    		get{ 
    			return m_IsActive;
    		} 
    		set{ 
    			if(m_IsActive != value){
    				m_IsActive = value; 
    				NotifyPropertyChanged("IsActive"); 
                }
    		} 
    	}
    	[DataMember]
        public string Images {
    		get{ 
    			return m_Images;
    		} 
    		set{ 
    			if(m_Images != value){
    				m_Images = value; 
    				NotifyPropertyChanged("Images"); 
                }
    		} 
    	}
    
    	protected override void CopyFromEntity(BaseEntity source, BaseEntity dest){
    		((Student)dest).StudentId = ((Student)source).StudentId;
    		((Student)dest).StudentNo = ((Student)source).StudentNo;
    		((Student)dest).FirstName = ((Student)source).FirstName;
    		((Student)dest).LastName = ((Student)source).LastName;
    		((Student)dest).BirthDay = ((Student)source).BirthDay;
    		((Student)dest).Address = ((Student)source).Address;
    		((Student)dest).CMND = ((Student)source).CMND;
    		((Student)dest).Phone = ((Student)source).Phone;
    		((Student)dest).HomePhone = ((Student)source).HomePhone;
    		((Student)dest).Email = ((Student)source).Email;
    		((Student)dest).UserName = ((Student)source).UserName;
    		((Student)dest).PassWord = ((Student)source).PassWord;
    		((Student)dest).SchoolYear = ((Student)source).SchoolYear;
    		((Student)dest).IsActive = ((Student)source).IsActive;
    		((Student)dest).Images = ((Student)source).Images;
    	}
    
    
        public virtual ICollection<StudentTestDetail> StudentTestDetails { get; set; }
        public virtual ICollection<StudentTest> StudentTests { get; set; }
        public virtual ICollection<SubjectsClass> SubjectsClasses { get; set; }
    }
}
