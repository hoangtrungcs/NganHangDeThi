//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Model.POCO
{
    using System.Runtime.Serialization;
    using System;
    using System.Collections.Generic;
    
    [DataContract]
    public partial class Department : BaseEntity
    {
        public Department()
        {
            this.SubjectsClasses = new HashSet<SubjectsClass>();
            this.Teachers = new HashSet<Teacher>();
        }
    
    	private int m_DepartmentId;
    	private string m_DepartmentName;
    	private string m_DepartmentNo;
        public int DepartmentId {
    		get{ 
    			return m_DepartmentId;
    		} 
    		set{ 
    			if(m_DepartmentId != value){
    				m_DepartmentId = value; 
    				NotifyPropertyChanged("DepartmentId"); 
                }
    		} 
    	}
    	[DataMember]
        public string DepartmentName {
    		get{ 
    			return m_DepartmentName;
    		} 
    		set{ 
    			if(m_DepartmentName != value){
    				m_DepartmentName = value; 
    				NotifyPropertyChanged("DepartmentName"); 
                }
    		} 
    	}
    	[DataMember]
        public string DepartmentNo {
    		get{ 
    			return m_DepartmentNo;
    		} 
    		set{ 
    			if(m_DepartmentNo != value){
    				m_DepartmentNo = value; 
    				NotifyPropertyChanged("DepartmentNo"); 
                }
    		} 
    	}
    
    	protected override void CopyFromEntity(BaseEntity source, BaseEntity dest){
    		((Department)dest).DepartmentId = ((Department)source).DepartmentId;
    		((Department)dest).DepartmentName = ((Department)source).DepartmentName;
    		((Department)dest).DepartmentNo = ((Department)source).DepartmentNo;
    	}
    
    
        public virtual ICollection<SubjectsClass> SubjectsClasses { get; set; }
        public virtual ICollection<Teacher> Teachers { get; set; }
    }
}
