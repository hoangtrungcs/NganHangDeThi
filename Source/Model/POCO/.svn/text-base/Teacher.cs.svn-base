//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Model.POCO
{
    using System.Runtime.Serialization;
    using System;
    using System.Collections.Generic;
    
    [DataContract]
    public partial class Teacher : BaseEntity
    {
        public Teacher()
        {
            this.SubjectsClasses = new HashSet<SubjectsClass>();
            this.SubjectsClasses1 = new HashSet<SubjectsClass>();
            this.UserSubjectRights = new HashSet<UserSubjectRight>();
        }
    
    	private int m_TeacherId;
    	private string m_FirstName;
    	private string m_LastName;
    	private System.DateTime m_Birthday;
    	private string m_Phone;
    	private string m_HomePhone;
    	private string m_Email;
    	private string m_Username;
    	private string m_PassWord;
    	private bool m_IsActive;
    	private int m_FK_DepartmentId;
    	private int m_Roles;
    	private string m_Images;
        public int TeacherId {
    		get{ 
    			return m_TeacherId;
    		} 
    		set{ 
    			if(m_TeacherId != value){
    				m_TeacherId = value; 
    				NotifyPropertyChanged("TeacherId"); 
                }
    		} 
    	}
    	[DataMember]
        public string FirstName {
    		get{ 
    			return m_FirstName;
    		} 
    		set{ 
    			if(m_FirstName != value){
    				m_FirstName = value; 
    				NotifyPropertyChanged("FirstName"); 
                }
    		} 
    	}
    	[DataMember]
        public string LastName {
    		get{ 
    			return m_LastName;
    		} 
    		set{ 
    			if(m_LastName != value){
    				m_LastName = value; 
    				NotifyPropertyChanged("LastName"); 
                }
    		} 
    	}
    	[DataMember]
        public System.DateTime Birthday {
    		get{ 
    			return m_Birthday;
    		} 
    		set{ 
    			if(m_Birthday != value){
    				m_Birthday = value; 
    				NotifyPropertyChanged("Birthday"); 
                }
    		} 
    	}
    	[DataMember]
        public string Phone {
    		get{ 
    			return m_Phone;
    		} 
    		set{ 
    			if(m_Phone != value){
    				m_Phone = value; 
    				NotifyPropertyChanged("Phone"); 
                }
    		} 
    	}
    	[DataMember]
        public string HomePhone {
    		get{ 
    			return m_HomePhone;
    		} 
    		set{ 
    			if(m_HomePhone != value){
    				m_HomePhone = value; 
    				NotifyPropertyChanged("HomePhone"); 
                }
    		} 
    	}
    	[DataMember]
        public string Email {
    		get{ 
    			return m_Email;
    		} 
    		set{ 
    			if(m_Email != value){
    				m_Email = value; 
    				NotifyPropertyChanged("Email"); 
                }
    		} 
    	}
    	[DataMember]
        public string Username {
    		get{ 
    			return m_Username;
    		} 
    		set{ 
    			if(m_Username != value){
    				m_Username = value; 
    				NotifyPropertyChanged("Username"); 
                }
    		} 
    	}
    	[DataMember]
        public string PassWord {
    		get{ 
    			return m_PassWord;
    		} 
    		set{ 
    			if(m_PassWord != value){
    				m_PassWord = value; 
    				NotifyPropertyChanged("PassWord"); 
                }
    		} 
    	}
    	[DataMember]
        public bool IsActive {
    		get{ 
    			return m_IsActive;
    		} 
    		set{ 
    			if(m_IsActive != value){
    				m_IsActive = value; 
    				NotifyPropertyChanged("IsActive"); 
                }
    		} 
    	}
    	[DataMember]
        public int FK_DepartmentId {
    		get{ 
    			return m_FK_DepartmentId;
    		} 
    		set{ 
    			if(m_FK_DepartmentId != value){
    				m_FK_DepartmentId = value; 
    				NotifyPropertyChanged("FK_DepartmentId"); 
                }
    		} 
    	}
    	[DataMember]
        public int Roles {
    		get{ 
    			return m_Roles;
    		} 
    		set{ 
    			if(m_Roles != value){
    				m_Roles = value; 
    				NotifyPropertyChanged("Roles"); 
                }
    		} 
    	}
    	[DataMember]
        public string Images {
    		get{ 
    			return m_Images;
    		} 
    		set{ 
    			if(m_Images != value){
    				m_Images = value; 
    				NotifyPropertyChanged("Images"); 
                }
    		} 
    	}
    
    	protected override void CopyFromEntity(BaseEntity source, BaseEntity dest){
    		((Teacher)dest).TeacherId = ((Teacher)source).TeacherId;
    		((Teacher)dest).FirstName = ((Teacher)source).FirstName;
    		((Teacher)dest).LastName = ((Teacher)source).LastName;
    		((Teacher)dest).Birthday = ((Teacher)source).Birthday;
    		((Teacher)dest).Phone = ((Teacher)source).Phone;
    		((Teacher)dest).HomePhone = ((Teacher)source).HomePhone;
    		((Teacher)dest).Email = ((Teacher)source).Email;
    		((Teacher)dest).Username = ((Teacher)source).Username;
    		((Teacher)dest).PassWord = ((Teacher)source).PassWord;
    		((Teacher)dest).IsActive = ((Teacher)source).IsActive;
    		((Teacher)dest).FK_DepartmentId = ((Teacher)source).FK_DepartmentId;
    		((Teacher)dest).Roles = ((Teacher)source).Roles;
    		((Teacher)dest).Images = ((Teacher)source).Images;
    	}
    
    
        public virtual Department Department { get; set; }
        public virtual ICollection<SubjectsClass> SubjectsClasses { get; set; }
        public virtual ICollection<SubjectsClass> SubjectsClasses1 { get; set; }
        public virtual ICollection<UserSubjectRight> UserSubjectRights { get; set; }
    }
}
