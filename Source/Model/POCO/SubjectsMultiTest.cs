//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Model.POCO
{
    using System.Runtime.Serialization;
    using System;
    using System.Collections.Generic;
    
    [DataContract]
    public partial class SubjectsMultiTest : BaseEntity
    {
    	private int m_FK_SubjectId;
    	private long m_FK_MultiTestId;
    	private int m_EasyNo;
    	private int m_NormalNo;
    	private int m_HardNo;
    	private int m_EasyNo1;
    	private int m_NormalNo1;
    	private int m_HardNo1;
        public int FK_SubjectId {
    		get{ 
    			return m_FK_SubjectId;
    		} 
    		set{ 
    			if(m_FK_SubjectId != value){
    				m_FK_SubjectId = value; 
    				NotifyPropertyChanged("FK_SubjectId"); 
                }
    		} 
    	}
        public long FK_MultiTestId {
    		get{ 
    			return m_FK_MultiTestId;
    		} 
    		set{ 
    			if(m_FK_MultiTestId != value){
    				m_FK_MultiTestId = value; 
    				NotifyPropertyChanged("FK_MultiTestId"); 
                }
    		} 
    	}
    	[DataMember]
        public int EasyNo {
    		get{ 
    			return m_EasyNo;
    		} 
    		set{ 
    			if(m_EasyNo != value){
    				m_EasyNo = value; 
    				NotifyPropertyChanged("EasyNo"); 
                }
    		} 
    	}
    	[DataMember]
        public int NormalNo {
    		get{ 
    			return m_NormalNo;
    		} 
    		set{ 
    			if(m_NormalNo != value){
    				m_NormalNo = value; 
    				NotifyPropertyChanged("NormalNo"); 
                }
    		} 
    	}
    	[DataMember]
        public int HardNo {
    		get{ 
    			return m_HardNo;
    		} 
    		set{ 
    			if(m_HardNo != value){
    				m_HardNo = value; 
    				NotifyPropertyChanged("HardNo"); 
                }
    		} 
    	}
    	[DataMember]
        public int EasyNo1 {
    		get{ 
    			return m_EasyNo1;
    		} 
    		set{ 
    			if(m_EasyNo1 != value){
    				m_EasyNo1 = value; 
    				NotifyPropertyChanged("EasyNo1"); 
                }
    		} 
    	}
    	[DataMember]
        public int NormalNo1 {
    		get{ 
    			return m_NormalNo1;
    		} 
    		set{ 
    			if(m_NormalNo1 != value){
    				m_NormalNo1 = value; 
    				NotifyPropertyChanged("NormalNo1"); 
                }
    		} 
    	}
    	[DataMember]
        public int HardNo1 {
    		get{ 
    			return m_HardNo1;
    		} 
    		set{ 
    			if(m_HardNo1 != value){
    				m_HardNo1 = value; 
    				NotifyPropertyChanged("HardNo1"); 
                }
    		} 
    	}
    
    	protected override void CopyFromEntity(BaseEntity source, BaseEntity dest){
    		((SubjectsMultiTest)dest).FK_SubjectId = ((SubjectsMultiTest)source).FK_SubjectId;
    		((SubjectsMultiTest)dest).FK_MultiTestId = ((SubjectsMultiTest)source).FK_MultiTestId;
    		((SubjectsMultiTest)dest).EasyNo = ((SubjectsMultiTest)source).EasyNo;
    		((SubjectsMultiTest)dest).NormalNo = ((SubjectsMultiTest)source).NormalNo;
    		((SubjectsMultiTest)dest).HardNo = ((SubjectsMultiTest)source).HardNo;
    		((SubjectsMultiTest)dest).EasyNo1 = ((SubjectsMultiTest)source).EasyNo1;
    		((SubjectsMultiTest)dest).NormalNo1 = ((SubjectsMultiTest)source).NormalNo1;
    		((SubjectsMultiTest)dest).HardNo1 = ((SubjectsMultiTest)source).HardNo1;
    	}
    
    
        public virtual MultiTest MultiTest { get; set; }
        public virtual Subject Subject { get; set; }
    }
}
